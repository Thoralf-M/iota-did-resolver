{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import identity_lib from \"iota-identity-wasm-test/web\";\r\n\r\n  let node;\r\n  let nodes = [\r\n    // Mainnet\r\n    { network: \"main\", url: \"https://nodes.thetangle.org:443\" },\r\n    { network: \"main\", url: \"https://nodes.iota.org:443\" },\r\n    { network: \"main\", url: \"https://iotanode.us:14267\" },\r\n    { network: \"main\", url: \"https://gewirr.com:14267\" },\r\n    { network: \"main\", url: \"https://hornet.beeiota.host:14265\" },\r\n    // Comnet\r\n    { network: \"com\", url: \"https://nodes.comnet.thetangle.org:443\" },\r\n    // Devnet\r\n    { network: \"dev\", url: \"https://nodes.devnet.iota.org:443\" }\r\n  ];\r\n  let did = \"did:iota:9mmRdfVhsQQdNbMWXVABzHg2nEZgW8FqbovqGzBcFLr4\";\r\n  let network = \"\";\r\n  let networkoption = \"main\";\r\n  let resolveDID = \"\";\r\n  let addressUrl = \"https://explorer.iota.org/mainnet/\";\r\n\r\n  let visible = false;\r\n  function visibility() {\r\n    visible = !visible;\r\n  }\r\n\r\n  async function resolve_did() {\r\n    let lib = await identity_lib();\r\n    //parse did to get the network\r\n    let parsed_did = lib.DID.parse(did);\r\n    console.log(parsed_did);\r\n    switch (parsed_did.network) {\r\n      case \"main\":\r\n        network = \"Mainnet\";\r\n        addressUrl =\r\n          \"https://explorer.iota.org/mainnet/address/\" + parsed_did.address;\r\n        break;\r\n      case \"com\":\r\n        network = \"Comnet\";\r\n        addressUrl =\r\n          \"https://comnet.thetangle.org/address/\" + parsed_did.address;\r\n        break;\r\n      case \"dev\":\r\n        addressUrl =\r\n          \"https://explorer.iota.org/devnet/address/\" + parsed_did.address;\r\n        network = \"Devnet\";\r\n    }\r\n    let networkNodes = nodes.filter(node => node.network == parsed_did.network);\r\n    let doc = \"\";\r\n    for (let t = 0; t < 10; t++) {\r\n      if (doc != \"\" && typeof doc != \"undefined\") {\r\n        return doc;\r\n      }\r\n      doc = await lib\r\n        .resolve(did, {\r\n          nodes: networkNodes.map(node => node.url),\r\n          network: parsed_did.network\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n    return \"No document found. Maybe the transaction was deleted on this node?\";\r\n  }\r\n  function handleClick() {\r\n    resolveDID = resolve_did();\r\n  }\r\n\r\n  function addNode() {\r\n    nodes.push({ network: networkoption, url: node });\r\n    visibility();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    margin: 0 auto;\r\n  }\r\n  pre {\r\n    display: inline-block;\r\n    text-align: left;\r\n    max-width: 50em;\r\n    width: 630px;\r\n    word-wrap: break-word;\r\n    /* overflow-wrap: break-word; */\r\n  }\r\n  h1 {\r\n    color: #14262c;\r\n    font-size: 4em;\r\n    font-weight: 100;\r\n  }\r\n  input[type=\"text\"] {\r\n    width: 35em;\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <h1>IOTA DID RESOLVER</h1>\r\n  <div>\r\n    {#if !visible}\r\n      <button on:click={visibility}>Add node</button>\r\n    {/if}\r\n    {#if visible}\r\n      <div>\r\n        <input type=\"text\" bind:value={node} placeholder=\"Node\" />\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" bind:group={networkoption} value={'main'} />\r\n          Mainnet\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" bind:group={networkoption} value={'com'} />\r\n          Comnet\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" bind:group={networkoption} value={'dev'} />\r\n          Devnet\r\n        </label>\r\n      </div>\r\n      <button on:click={addNode}>Add node</button>\r\n    {/if}\r\n  </div>\r\n\r\n  <input type=\"text\" bind:value={did} placeholder=\"Enter a DID\" />\r\n  <button on:click={handleClick}>Resolve DID</button>\r\n  <div>Network: {network}</div>\r\n  <a href={addressUrl} target=\"_blank\">Explorerlink</a>\r\n\r\n  {#await resolveDID}\r\n    <p>Resolving...</p>\r\n  {:then resolved_doc}\r\n    <p>Resolved document:</p>\r\n    <pre>{JSON.stringify(resolved_doc, null, 1)}</pre>\r\n  {:catch error}\r\n    {console.log(error)}\r\n    <p style=\"color: red\">{error}</p>\r\n  {/await}\r\n</main>\r\n"
  ],
  "names": [],
  "mappings": "AA0EE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,UAAU,AAEvB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAC,CAAC,AAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC"
}